plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.asciidoctor.jvm.convert' version '4.0.0-alpha.1'
}

group = "${projectGroup}"
version = "${projectVersion}-SNAPSHOT"
sourceCompatibility = "17"

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	asciidoctorExt

	all {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
		exclude group: 'commons-logging', module: 'commons-logging'
	}
}

repositories {
	mavenCentral()
	flatDir {
		dirs("libs")
	}
}

ext {
	set('snippetsDir', file('build/generated-snippets'))
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// 웹소켓
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	implementation 'net.sf.json-lib:json-lib:2.4:jdk15'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
	// jsonb 타입 처리
	implementation 'io.hypersistence:hypersistence-utils-hibernate-63:3.7.0'
	
	implementation group: 'org.apache.commons', name: 'commons-text', version: '1.10.0'


 	annotationProcessor(
		'org.springframework.boot:spring-boot-configuration-processor',
		'org.projectlombok:lombok',
		"jakarta.persistence:jakarta.persistence-api",
		"jakarta.annotation:jakarta.annotation-api",
	)

	implementation 'org.springframework.restdocs:spring-restdocs-core'
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'

	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation ('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'com.vaadin.external.google', module:'android-json'
	}
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    
}

tasks.named('test') {
	outputs.dir snippetsDir
}


bootJar{
    archivesBaseName = "websocket"
    archiveFileName = "websocket.jar"
    archiveVersion = "${project.version}"
}

bootRun {
    String activeProfile = System.properties['spring.profiles.active']
    systemProperty "spring.profiles.active", activeProfile
}
